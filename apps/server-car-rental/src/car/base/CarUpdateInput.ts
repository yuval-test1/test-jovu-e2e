/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { RentalUpdateManyWithoutCarsInput } from "./RentalUpdateManyWithoutCarsInput";
import {
  ValidateNested,
  IsOptional,
  IsNumber,
  IsEnum,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumCarStatus } from "./EnumCarStatus";
import { OrderUpdateManyWithoutCarsInput } from "./OrderUpdateManyWithoutCarsInput";

@InputType()
class CarUpdateInput {
  @ApiProperty({
    required: false,
    type: () => RentalUpdateManyWithoutCarsInput,
  })
  @ValidateNested()
  @Type(() => RentalUpdateManyWithoutCarsInput)
  @IsOptional()
  @Field(() => RentalUpdateManyWithoutCarsInput, {
    nullable: true,
  })
  rentals?: RentalUpdateManyWithoutCarsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  rentalPricePerDay?: number | null;

  @ApiProperty({
    required: false,
    enum: EnumCarStatus,
  })
  @IsEnum(EnumCarStatus)
  @IsOptional()
  @Field(() => EnumCarStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  registrationNumber?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  make?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  model?: string | null;

  @ApiProperty({
    required: false,
    type: () => OrderUpdateManyWithoutCarsInput,
  })
  @ValidateNested()
  @Type(() => OrderUpdateManyWithoutCarsInput)
  @IsOptional()
  @Field(() => OrderUpdateManyWithoutCarsInput, {
    nullable: true,
  })
  orders?: OrderUpdateManyWithoutCarsInput;
}

export { CarUpdateInput as CarUpdateInput };
